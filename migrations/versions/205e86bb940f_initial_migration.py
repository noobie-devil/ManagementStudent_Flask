"""Initial Migration

Revision ID: 205e86bb940f
Revises: 
Create Date: 2021-11-21 18:49:54.136138

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '205e86bb940f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_name', sa.String(length=100), nullable=False),
    sa.Column('time', sa.String(length=100), nullable=False),
    sa.Column('start_year', sa.String(length=20), nullable=False),
    sa.Column('end_year', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('end_year'),
    sa.UniqueConstraint('start_year')
    )
    op.create_table('ethnic',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ethnic_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ethnic_name')
    )
    op.create_table('gender',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('gender_name', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gender_name')
    )
    op.create_table('grade',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('grade_name', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('grade_name')
    )
    op.create_table('inputScoreTime',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('end_date'),
    sa.UniqueConstraint('start_date')
    )
    op.create_table('nationality',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nationality_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nationality_name')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('schoolYear',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('year', sa.String(length=50), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('year')
    )
    op.create_table('scoreType',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score_name', sa.String(length=100), nullable=False),
    sa.Column('multiplier', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('score_name')
    )
    op.create_table('semester',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('semester_name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('display_name'),
    sa.UniqueConstraint('semester_name')
    )
    op.create_table('subject',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subject_name', sa.String(length=60), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('letter_point', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subject_name')
    )
    op.create_table('class',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('class_name', sa.String(length=50), nullable=False),
    sa.Column('grade_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['grade_id'], ['grade.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('class_name')
    )
    op.create_table('inputScoreStatus',
    sa.Column('time_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['time_id'], ['inputScoreTime.id'], ),
    sa.PrimaryKeyConstraint('time_id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.String(length=50), nullable=False),
    sa.Column('gender_id', sa.Integer(), nullable=False),
    sa.Column('birthdate', sa.Date(), nullable=False),
    sa.Column('ethnic_id', sa.Integer(), nullable=False),
    sa.Column('nationality_id', sa.Integer(), nullable=False),
    sa.Column('permanent_address', sa.String(length=250), nullable=False),
    sa.Column('home_town', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=200), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ethnic_id'], ['ethnic.id'], ),
    sa.ForeignKeyConstraint(['gender_id'], ['gender.id'], ),
    sa.ForeignKeyConstraint(['nationality_id'], ['nationality.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('password_hash', sa.String(length=60), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('administrator',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('educationalOffice',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('moreInfo',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('current_residence', sa.String(length=120), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('student',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_code', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teacher',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('teacher_code', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('classInfo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('school_year_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('amount_std', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['school_year_id'], ['schoolYear.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('familyInfo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('current_residence', sa.String(length=120), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studentInClass',
    sa.Column('class_info_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_info_id'], ['classInfo.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('class_info_id', 'student_id')
    )
    op.create_table('teachingAssignment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('class_info_id', sa.Integer(), nullable=False),
    sa.Column('semester_id', sa.Integer(), nullable=False),
    sa.Column('school_year_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['class_info_id'], ['classInfo.id'], ),
    sa.ForeignKeyConstraint(['school_year_id'], ['schoolYear.id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subjectTranscript',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('transcript_info_id', sa.Integer(), nullable=False),
    sa.Column('score_average', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['transcript_info_id'], ['teachingAssignment.id'], ),
    sa.PrimaryKeyConstraint('id', 'student_id')
    )
    op.create_table('detailsTranscript',
    sa.Column('transcript_id', sa.Integer(), nullable=False),
    sa.Column('score_type_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['score_type_id'], ['scoreType.id'], ),
    sa.ForeignKeyConstraint(['transcript_id'], ['subjectTranscript.id'], ),
    sa.PrimaryKeyConstraint('transcript_id', 'score_type_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('detailsTranscript')
    op.drop_table('subjectTranscript')
    op.drop_table('teachingAssignment')
    op.drop_table('studentInClass')
    op.drop_table('familyInfo')
    op.drop_table('classInfo')
    op.drop_table('teacher')
    op.drop_table('student')
    op.drop_table('moreInfo')
    op.drop_table('educationalOffice')
    op.drop_table('administrator')
    op.drop_table('account')
    op.drop_table('user')
    op.drop_table('inputScoreStatus')
    op.drop_table('class')
    op.drop_table('subject')
    op.drop_table('semester')
    op.drop_table('scoreType')
    op.drop_table('schoolYear')
    op.drop_table('role')
    op.drop_table('nationality')
    op.drop_table('inputScoreTime')
    op.drop_table('grade')
    op.drop_table('gender')
    op.drop_table('ethnic')
    op.drop_table('course')
    # ### end Alembic commands ###
